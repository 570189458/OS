package com.os.homework.UI;

import javax.swing.*;
import java.awt.*;

public class _Process extends JPanel {
    JLabel process1Label = new JLabel("进程1");
    JLabel process2Label = new JLabel("进程2");
    JLabel process3Label = new JLabel("进程3");
    JLabel runTimeLabel = new JLabel("运行时间");
    JLabel S1waitTimeLabel = new JLabel("S1P时间");
    JLabel S1signalTimeLabel = new JLabel("S1V时间");
    JLabel S2waitTimeLabel = new JLabel("S2P时间");
    JLabel S2signalTimeLabel = new JLabel("S2V时间");
    JLabel IOStartTimeLabel = new JLabel("I/O开始时间");
    JLabel IOFinishTimeLabel = new JLabel("I/O结束时间");
    JTextField runTimeTF1 = new JTextField(4);
    JTextField runTimeTF2 = new JTextField(4);
    JTextField runTimeTF3 = new JTextField(4);
    JTextField S1waitTimeTF1 = new JTextField(4);
    JTextField S1waitTimeTF2 = new JTextField(4);
    JTextField S1waitTimeTF3 = new JTextField(4);
    JTextField S1signalTimeTF1 = new JTextField(4);
    JTextField S1signalTimeTF2 = new JTextField(4);
    JTextField S1signalTimeTF3 = new JTextField(4);
    JTextField S2waitTimeTF1 = new JTextField(4);
    JTextField S2waitTimeTF2 = new JTextField(4);
    JTextField S2waitTimeTF3 = new JTextField(4);
    JTextField S2signalTimeTF1 = new JTextField(4);
    JTextField S2signalTimeTF2 = new JTextField(4);
    JTextField S2signalTimeTF3 = new JTextField(4);
    JTextField IOStartTF1 = new JTextField(6);
    JTextField IOStartTF2 = new JTextField(6);
    JTextField IOStartTF3 = new JTextField(6);
    JTextField IOFinishTF1 = new JTextField(6);
    JTextField IOFinishTF2 = new JTextField(6);
    JTextField IOFinishTF3 = new JTextField(6);
    JButton JBT = new JButton("确定");
    private static _Process instance;
    public static _Process getInstance(){
        if(instance==null){
            instance = new _Process();
        }
        return instance;
    }
    _Process(){
        GridBagLayout gbl = new GridBagLayout();
        this.setLayout(gbl);
        GridBagConstraints gbc =new GridBagConstraints();
        int counter=0;
        gbc.weightx=0;
        gbc.weighty=0;
        gbc.gridx=counter++;
        gbc.gridy=0;
        this.add(Box.createHorizontalStrut(70),gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(runTimeLabel,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(S1waitTimeLabel,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(S1signalTimeLabel,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(S2waitTimeLabel,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(S2signalTimeLabel,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(IOStartTimeLabel,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(IOFinishTimeLabel,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(100),gbc);
        counter=0;
        gbc.gridy=1;
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(70),gbc);
        gbc.gridx=counter++;
        this.add(process1Label,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(runTimeTF1,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(S1waitTimeTF1,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(S1signalTimeTF1,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(S2waitTimeTF1,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(S2signalTimeTF1,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(IOStartTF1,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(IOFinishTF1,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(100),gbc);
        counter=0;
        gbc.gridy=2;
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(70),gbc);
        gbc.gridx=counter++;
        this.add(process2Label,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(runTimeTF2,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(S1waitTimeTF2,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(S1signalTimeTF2,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(S2waitTimeTF2,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(S2signalTimeTF2,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(IOStartTF2,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(IOFinishTF2,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(100),gbc);
        counter=0;
        gbc.gridy=3;
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(70),gbc);
        gbc.gridx=counter++;
        this.add(process3Label,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(runTimeTF3,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(S2waitTimeTF3,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(S2signalTimeTF3,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(IOStartTF3,gbc);
        gbc.gridx=counter++;
        this.add(Box.createHorizontalStrut(30),gbc);
        gbc.gridx=counter++;
        this.add(IOFinishTF3,gbc);
        gbc.gridx=counter++;
        this.add(JBT,gbc);
        counter = 0;

        this.setSize(750, 300);
        this.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        this.setBorder(BorderFactory.createTitledBorder ("设置进程"));
    }
}
